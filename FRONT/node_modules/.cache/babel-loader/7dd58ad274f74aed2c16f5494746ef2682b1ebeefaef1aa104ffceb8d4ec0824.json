{"ast":null,"code":"import { overwriteReadonlyProp } from \"tsafe/lab/overwriteReadonlyProp\";\nexport class Deferred {\n  constructor() {\n    this.isPending = true;\n    let resolve;\n    let reject;\n    this.pr = new Promise((resolve_, reject_) => {\n      resolve = value => {\n        overwriteReadonlyProp(this, \"isPending\", false);\n        resolve_(value);\n      };\n      reject = error => {\n        overwriteReadonlyProp(this, \"isPending\", false);\n        reject_(error);\n      };\n    });\n    this.resolve = resolve;\n    this.reject = reject;\n  }\n}\nexport class VoidDeferred extends Deferred {}","map":{"version":3,"names":["overwriteReadonlyProp","Deferred","constructor","isPending","resolve","reject","pr","Promise","resolve_","reject_","value","error","VoidDeferred"],"sources":["C:\\Users\\alban\\node_modules\\@codegouvfr\\react-dsfr\\src\\tools\\Deferred.ts"],"sourcesContent":["import { overwriteReadonlyProp } from \"tsafe/lab/overwriteReadonlyProp\";\n\nexport class Deferred<T> {\n    public readonly pr: Promise<T>;\n\n    /** NOTE: Does not need to be called bound to instance*/\n    public readonly resolve: (value: T) => void;\n    public readonly reject: (error: any) => void;\n\n    constructor() {\n        let resolve!: (value: T) => void;\n        let reject!: (error: any) => void;\n\n        this.pr = new Promise<T>((resolve_, reject_) => {\n            resolve = value => {\n                overwriteReadonlyProp(this, \"isPending\", false);\n                resolve_(value);\n            };\n\n            reject = error => {\n                overwriteReadonlyProp(this, \"isPending\", false);\n                reject_(error);\n            };\n        });\n\n        this.resolve = resolve;\n        this.reject = reject;\n    }\n\n    public readonly isPending: boolean = true;\n}\n\nexport namespace Deferred {\n    export type Unpack<T extends Deferred<any>> = T extends Deferred<infer U> ? U : never;\n}\n\nexport class VoidDeferred extends Deferred<undefined> {\n    public declare readonly resolve: () => void;\n}\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,iCAAiC;AAEvE,OAAM,MAAOC,QAAQ;EAOjBC,YAAA;IAoBgB,KAAAC,SAAS,GAAY,IAAI;IAnBrC,IAAIC,OAA4B;IAChC,IAAIC,MAA6B;IAEjC,IAAI,CAACC,EAAE,GAAG,IAAIC,OAAO,CAAI,CAACC,QAAQ,EAAEC,OAAO,KAAI;MAC3CL,OAAO,GAAGM,KAAK,IAAG;QACdV,qBAAqB,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC;QAC/CQ,QAAQ,CAACE,KAAK,CAAC;MACnB,CAAC;MAEDL,MAAM,GAAGM,KAAK,IAAG;QACbX,qBAAqB,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC;QAC/CS,OAAO,CAACE,KAAK,CAAC;MAClB,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAACP,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;;AASJ,OAAM,MAAOO,YAAa,SAAQX,QAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}