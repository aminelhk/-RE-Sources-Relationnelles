{"ast":null,"code":"import { useObservable } from \"./useObservable\";\nimport { useState } from \"react\";\n/**\n * Equivalent of https://docs.evt.land/api/react-hooks\n * */\nexport function useRerenderOnChange($) {\n  //NOTE: We use function in case the state is a function\n  const [, setCurrent] = useState(() => $.current);\n  useObservable(({\n    registerSubscription\n  }) => {\n    const subscription = $.subscribe(current => setCurrent(() => current));\n    registerSubscription(subscription);\n  }, [$]);\n}","map":{"version":3,"names":["useObservable","useState","useRerenderOnChange","$","setCurrent","current","registerSubscription","subscription","subscribe"],"sources":["C:\\Users\\alban\\node_modules\\@codegouvfr\\react-dsfr\\src\\tools\\StatefulObservable\\hooks\\useRerenderOnChange.ts"],"sourcesContent":["import { useObservable } from \"./useObservable\";\nimport { useState } from \"react\";\nimport type { StatefulObservable } from \"../StatefulObservable\";\n\n/**\n * Equivalent of https://docs.evt.land/api/react-hooks\n * */\nexport function useRerenderOnChange($: StatefulObservable<unknown>): void {\n    //NOTE: We use function in case the state is a function\n    const [, setCurrent] = useState(() => $.current);\n\n    useObservable(\n        ({ registerSubscription }) => {\n            const subscription = $.subscribe(current => setCurrent(() => current));\n            registerSubscription(subscription);\n        },\n        [$]\n    );\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,QAAQ,QAAQ,OAAO;AAGhC;;;AAGA,OAAM,SAAUC,mBAAmBA,CAACC,CAA8B;EAC9D;EACA,MAAM,GAAGC,UAAU,CAAC,GAAGH,QAAQ,CAAC,MAAME,CAAC,CAACE,OAAO,CAAC;EAEhDL,aAAa,CACT,CAAC;IAAEM;EAAoB,CAAE,KAAI;IACzB,MAAMC,YAAY,GAAGJ,CAAC,CAACK,SAAS,CAACH,OAAO,IAAID,UAAU,CAAC,MAAMC,OAAO,CAAC,CAAC;IACtEC,oBAAoB,CAACC,YAAY,CAAC;EACtC,CAAC,EACD,CAACJ,CAAC,CAAC,CACN;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}