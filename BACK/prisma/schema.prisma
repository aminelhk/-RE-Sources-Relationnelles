// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  idUser    Int     @id @default(autoincrement())
  email String  @unique
  firstName  String
  lastName String 
  phone String @unique
  password String
  pseudo String
  isActive Boolean @default(false)
  isPrivate Boolean @default(true)
  vitalCardNumber String @unique
  ressources Resource[]
  typesRelation TypeRelation[]
  role Role @relation(fields: [roleId], references: [idRole])
  roleId Int
}

model Resource {
  idResource Int @id @default(autoincrement())
  title String
  content String
  isFavorite Boolean @default(false)
  isArchived Boolean @default(false)
  isValidated Boolean @default(false)
  author User @relation(fields: [authorId], references: [idUser])
  authorId Int
  categoryResource CategoryResource @relation(fields: [categoryResourceId], references: [idCategoryResource])
  categoryResourceId Int 
  typeResource TypeResource @relation(fields: [typeResourceId], references: [idTypeResource])
  typeResourceId Int 
  typeRelation TypeRelation[]
  stateTypeRelation StateTypeRelation[]
}

model Role {
  idRole Int @id @default(autoincrement())
  labelRole String
  users User[]
}

model TypeRelation {
  idTypeRelation Int @id @default(autoincrement())
  labelTypeRelation String
  users User[]
  resources Resource[]
  stateTypeRelation StateTypeRelation[]
}

model StateTypeRelation {
  idStateTypeRelation Int @id @default(autoincrement())
  labelStateTypeRelation String
  typesRelation TypeRelation[]
  resources Resource[]
}

// model Group {
//   idGroup Int @id @default (autoincrement())
//   labelGroup String
//   descriptionGroup String
// }

model CategoryResource{
  idCategoryResource Int @id @default(autoincrement())
  labelCategorieRessource String
  resources Resource[]
}

model TypeResource {
  idTypeResource Int @id @default(autoincrement())
  labelTypeResource String
  resources Resource[]
}

